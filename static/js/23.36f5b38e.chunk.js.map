{"version":3,"file":"static/js/23.36f5b38e.chunk.js","mappings":"2SACOA,EAAS,gCACFC,EAAa,iDACpBC,EAAQ,4CAEDC,EAAgB,WAC1B,OAAOC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,+BAA4CE,GACrD,EACYG,EAAmB,SAACC,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,uBAAoCE,EAApC,kBAAqDI,GAC9D,EACYC,EAAoB,SAACC,GAC/B,OAAOJ,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8BQ,GAA9B,OAAmCN,GAC5C,EACYO,EAAmB,SAACD,GAC9B,OAAOJ,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8BQ,EAA9B,mBAA2CN,GACpD,EACYQ,EAAgB,SAACF,GAC3B,OAAOJ,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8BQ,EAA9B,mBAA2CN,GACpD,C,6EC6BF,UA5CgB,WACd,IAAQM,GAAOG,EAAAA,EAAAA,MAAPH,GACR,GAA8BI,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,QAArC,eAAOK,EAAP,KAAeC,EAAf,KAcA,OAbAC,EAAAA,EAAAA,YAAU,YACRV,EAAAA,EAAAA,IAAiBD,GACdY,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPP,EAAWO,EAAKC,SAChBJ,EAAU,YACX,IACAK,OAAM,SAAAC,GACLN,EAAU,QACX,IACAO,SAAQ,WACPT,GAAa,EACd,GACJ,GAAE,CAACR,IACW,SAAXS,GAAqBF,GAChB,6CAEM,UAAXE,GACK,oDAIP,gCACG,oCACCJ,EAAQa,OAAS,EACnBb,EAAQc,KAAI,YAAqC,IAAnCnB,EAAkC,EAAlCA,GAAGoB,EAA+B,EAA/BA,OAAOC,EAAwB,EAAxBA,QAAQC,EAAgB,EAAhBA,WAC1BC,EAAgB,IAAIC,KAAKF,GAAYG,iBACzC,OACE,4BACE,qCAAaL,MACb,uBACCC,KAED,0CAAkBE,OALVvB,EAQb,KAAG,4EAGT,C","sources":["api/getApi.js","components/reviews/Reviews.jsx"],"sourcesContent":[" import axios from \"axios\";\n const BASE_URL=\"https://api.themoviedb.org/3/\";\n export const BASE_IMG_URL=\"https://image.tmdb.org/t/p/w220_and_h330_face/\";\n const API_KEY=\"?api_key=68bc8f2587d307cdd95fbf9f8320ddc0\";\n\n export const fetchTrending = () =>{\n    return axios.get(`${BASE_URL}/trending/movie/week${API_KEY}`)\n };\n export const fetchMovieByName = (query) =>{\n    return axios.get(`${BASE_URL}search/movie${API_KEY}&query=${query}`)\n }\n export const fetchDetailedById = (id) =>{\n    return axios.get(`${BASE_URL}movie/${id}${API_KEY}`)\n }\n export const fetchReviewsById = (id) =>{\n    return axios.get(`${BASE_URL}movie/${id}/reviews${API_KEY}`)\n }\n export const fetchCastById = (id) =>{\n    return axios.get(`${BASE_URL}movie/${id}/credits${API_KEY}`)\n }","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n//      \nimport { fetchReviewsById } from 'api/getApi';\nconst Reviews = () => {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [status, setStatus] = useState('idle');\n  useEffect(() => {\n    fetchReviewsById(id)\n      .then(({ data }) => {\n        setReviews(data.results);\n        setStatus('fulfilled');\n      })\n      .catch(error => {\n        setStatus('error');\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [id]);\n  if (status === 'idle' || isLoading) {\n    return <>Loading...</>;\n  }\n  if (status === 'error') {\n    return <>Occured an error</>;\n  }\n\n  return (\n    <section>\n       <h3>Reviews</h3>\n      { reviews.length > 0?\n      reviews.map(({id,author,content,updated_at}) => {\n        var formattedDate = new Date(updated_at).toLocaleString();\n        return (\n          <div key={id}>\n            <h2>Author: {author}</h2>\n            <p>\n            {content}\n            </p>\n            <b>Last updated: {formattedDate}</b>\n          </div>\n        );\n      }): <div>We don't have any reviews for this movie yet</div>}\n    </section>\n  );\n};\nexport default Reviews;\n"],"names":["BASE_URL","BASE_IMG_URL","API_KEY","fetchTrending","axios","fetchMovieByName","query","fetchDetailedById","id","fetchReviewsById","fetchCastById","useParams","useState","reviews","setReviews","isLoading","setIsLoading","status","setStatus","useEffect","then","data","results","catch","error","finally","length","map","author","content","updated_at","formattedDate","Date","toLocaleString"],"sourceRoot":""}