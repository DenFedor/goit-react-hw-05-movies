{"version":3,"file":"static/js/217.c24c1a1c.chunk.js","mappings":"4SACOA,EAAS,gCACFC,EAAa,kCACpBC,EAAQ,4CAEDC,EAAgB,WAC1B,OAAOC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,+BAA4CE,GACrD,EACYG,EAAmB,SAACC,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,uBAAoCE,EAApC,kBAAqDI,GAC9D,EACYC,EAAoB,SAACC,GAC/B,OAAOJ,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8BQ,GAA9B,OAAmCN,GAC5C,EACYO,EAAmB,SAACD,GAC9B,OAAOJ,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8BQ,EAA9B,mBAA2CN,GACpD,EACYQ,EAAgB,SAACF,GAC3B,OAAOJ,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8BQ,EAA9B,mBAA2CN,GACpD,C,6JCfWS,GAAWC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAD,wKAQVE,GAAgBF,EAAAA,EAAAA,IAAOG,EAAAA,GAAPH,CAAH,kPAabI,EAAMJ,EAAAA,GAAAA,GAAF,4E,kBCkDjB,EApEqB,WAAO,IAAD,IACjBJ,GAAOS,EAAAA,EAAAA,MAAPT,GACR,GAA0BU,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA2BJ,EAAAA,EAAAA,UAAS,QAApC,eAAOK,EAAP,KAAeC,EAAf,KAEMC,EAAO,qBADEC,EAAAA,EAAAA,MACQC,aAAV,aAAC,EAAgBC,YAAjB,QAAyBC,EAAAA,EAAAA,KAetC,IAdAC,EAAAA,EAAAA,YAAU,WACRR,GAAa,GACbE,EAAU,YACVjB,EAAAA,EAAAA,IAAkBC,GACfuB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPZ,EAASY,GACTR,EAAU,YACX,IACAS,OAAM,SAACC,GAASV,EAAU,SAASW,QAAQC,IAAIF,EAAO,IACtDG,SAAQ,WACPf,GAAa,EACd,GACJ,GAAE,CAACd,IAES,SAATe,GAAkBF,EACpB,OAAO,6CAET,GAAa,UAATE,EACF,OAAO,mDAET,IAAQe,EAAyDnB,EAAzDmB,cAAeC,EAA0CpB,EAA1CoB,MAAOC,EAAmCrB,EAAnCqB,OAAQC,EAA2BtB,EAA3BsB,aAAcC,EAAavB,EAAbuB,SAC9CC,EAAeH,EAClBI,KAAI,SAAAC,GACH,OAAOA,EAAKC,IACb,IACAC,KAAK,KACR,OACE,iCACE,0BACE,SAAC,KAAD,CAAMC,GAAIvB,EAAV,wBAEF,gBAAKwB,IAAoB,MAAfX,EAAsBrC,EAAAA,GAAaqC,EAAgBY,EAAeC,IAAKZ,KACjF,4BACE,wBAAKA,KACL,wCAAgBa,KAAKC,MAAqB,GAAfZ,GAA3B,QACA,sCACA,uBAAIC,KACJ,oCAEA,8BAAIC,QAAJ,IAAIA,EAAAA,EAAgB,iCAEtB,4BACE,mDACA,UAAC3B,EAAD,YACE,yBACE,SAACF,EAAD,CAAekC,IAAIM,EAAAA,EAAAA,IAAazB,EAAAA,EAAAA,KAAgB,CAACrB,GAAIA,IAAM+C,SAAO,EAAlE,qBAEF,yBACA,SAACzC,EAAD,CAAekC,IAAIM,EAAAA,EAAAA,IAAazB,EAAAA,EAAAA,QAAmB,CAACrB,GAAIA,IAAM+C,SAAO,EAArE,wBAEA,yBACE,SAAC5C,EAAD,CAAYqC,GAAG,GAAGO,SAAO,EAAzB,4BAGJ,SAAC,EAAAC,SAAD,CAAUC,UAAU,gDAApB,UACA,SAAC,KAAD,WAKP,C","sources":["api/getApi.js","components/moviedetails/MovieDetails.styled.js","components/moviedetails/MovieDetails.jsx"],"sourcesContent":[" import axios from \"axios\";\n const BASE_URL=\"https://api.themoviedb.org/3/\";\n export const BASE_IMG_URL=\"https://image.tmdb.org/t/p/w500\";\n const API_KEY=\"?api_key=68bc8f2587d307cdd95fbf9f8320ddc0\";\n\n export const fetchTrending = () =>{\n    return axios.get(`${BASE_URL}/trending/movie/week${API_KEY}`)\n };\n export const fetchMovieByName = (query) =>{\n    return axios.get(`${BASE_URL}search/movie${API_KEY}&query=${query}`)\n }\n export const fetchDetailedById = (id) =>{\n    return axios.get(`${BASE_URL}movie/${id}${API_KEY}`)\n }\n export const fetchReviewsById = (id) =>{\n    return axios.get(`${BASE_URL}movie/${id}/reviews${API_KEY}`)\n }\n export const fetchCastById = (id) =>{\n    return axios.get(`${BASE_URL}movie/${id}/credits${API_KEY}`)\n }","import styled from \"styled-components\";\nimport { NavLink,Link } from \"react-router-dom\";\n\n\nexport const StyledLink=styled(Link)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  background-color: rgb(3,37,65);\n`\nexport const StyledNavLink = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: white;\n  font-weight: 500;\n  background-color: rgb(3,37,65);\n\n  &.active {\n    color: white;\n    background-color: orangered;\n  }\n`;\nexport const List= styled.ul`\ndisplay: flex;\ngap: 10px;\nlist-style-type: none;\n`","import { fetchDetailedById,BASE_IMG_URL } from 'api/getApi';\nimport { useEffect, useState,Suspense } from 'react';\nimport { useParams,generatePath,Outlet,Link,useLocation } from 'react-router-dom';\nimport { PAGE_NAMES } from 'router/paths';\nimport { StyledLink,StyledNavLink,List } from './MovieDetails.styled';\nimport noImagePoster from '../../images/no_image_poster.png';\n\nconst MovieDetails = () => {\n  const { id } = useParams();\n  const [movie, setMovie] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [status, setStatus] =useState('idle');\n  const location=useLocation();\n  const getBack=location.state?.from ?? PAGE_NAMES.home;\n  useEffect(() => {\n    setIsLoading(true);\n    setStatus('loading');\n    fetchDetailedById(id)\n      .then(({ data }) => {\n        setMovie(data);\n        setStatus('fulfilled');\n      })\n      .catch((error)=>{setStatus('error');console.log(error)})\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [id]);\n\n  if (status==='idle'|| isLoading) {\n    return <>Loading...</>;\n  }\n  if (status==='error') {\n    return <>Occured an error</>;\n  }\n  const { backdrop_path, title, genres, vote_average, overview } = movie;\n  const genresString = genres\n    .map(item => {\n      return item.name;\n    })\n    .join(' ');\n  return (\n    <>\n      <div>\n        <Link to={getBack}>Go back</Link>\n      </div>\n      <img src={backdrop_path!=null ? BASE_IMG_URL+backdrop_path : noImagePoster} alt={title} />\n      <div>\n        <h2>{title}</h2>\n        <p>User score: {Math.round(vote_average * 10)}%</p>\n        <h3>Overview</h3>\n        <p>{overview}</p>\n        <h3>Genres</h3>\n\n        <p>{genresString ?? 'Genres are not available'}</p>\n      </div>\n      <div>\n        <p>Additional information</p>\n        <List>\n          <li>\n            <StyledNavLink to={generatePath(PAGE_NAMES.cast,{id: id})} replace>Cast</StyledNavLink>\n          </li>\n          <li>\n          <StyledNavLink to={generatePath(PAGE_NAMES.reviews,{id: id})} replace>Reviews</StyledNavLink>\n          </li>\n          <li>\n            <StyledLink to='' replace>Hide All</StyledLink>\n          </li>\n        </List>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n        <Outlet />\n      </Suspense>\n      </div>\n    </>\n  );\n};\nexport default MovieDetails;\n"],"names":["BASE_URL","BASE_IMG_URL","API_KEY","fetchTrending","axios","fetchMovieByName","query","fetchDetailedById","id","fetchReviewsById","fetchCastById","StyledLink","styled","Link","StyledNavLink","NavLink","List","useParams","useState","movie","setMovie","isLoading","setIsLoading","status","setStatus","getBack","useLocation","state","from","PAGE_NAMES","useEffect","then","data","catch","error","console","log","finally","backdrop_path","title","genres","vote_average","overview","genresString","map","item","name","join","to","src","noImagePoster","alt","Math","round","generatePath","replace","Suspense","fallback"],"sourceRoot":""}