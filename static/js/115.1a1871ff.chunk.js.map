{"version":3,"file":"static/js/115.1a1871ff.chunk.js","mappings":"4SACOA,EAAS,gCACFC,EAAa,kCACpBC,EAAQ,4CAEDC,EAAgB,WAC1B,OAAOC,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,+BAA4CE,GACrD,EACYG,EAAmB,SAACC,GAC9B,OAAOF,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,uBAAoCE,EAApC,kBAAqDI,GAC9D,EACYC,EAAoB,SAACC,GAC/B,OAAOJ,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8BQ,GAA9B,OAAmCN,GAC5C,EACYO,EAAmB,SAACD,GAC9B,OAAOJ,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8BQ,EAA9B,mBAA2CN,GACpD,EACYQ,EAAgB,SAACF,GAC3B,OAAOJ,EAAAA,EAAAA,IAAA,UAAaJ,EAAb,iBAA8BQ,EAA9B,mBAA2CN,GACpD,C,0HCjBWS,EAAYC,EAAAA,GAAAA,IAAH,2GAMTC,EAAcD,EAAAA,GAAAA,IAAH,uHASXE,EAAWF,EAAAA,GAAAA,GAAH,mG,2BCsCrB,EAlDa,WACX,IAAQJ,GAAOO,EAAAA,EAAAA,MAAPP,GACR,GAAwBQ,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,QAArC,eAAOK,EAAP,KAAeC,EAAf,KAeA,OAdAC,EAAAA,EAAAA,YAAU,YACRb,EAAAA,EAAAA,IAAcF,GACXgB,MAAK,YAAe,IAAZC,EAAW,EAAXA,KACPP,EAAQO,EAAKR,MACbK,EAAU,YACX,IACAI,OAAM,SAAAC,GACLL,EAAU,SACVM,QAAQC,IAAIF,EACb,IACAG,SAAQ,WACPV,GAAa,EACd,GACJ,GAAE,CAACZ,IACW,SAAXa,GAAqBF,GAChB,6CAEM,UAAXE,GACK,oDAIP,gCACE,kCAEA,SAACV,EAAD,UACGM,EAAKc,OAAO,EAAGd,EAAKe,KAAI,YAA2C,IAAxCxB,EAAuC,EAAvCA,GAAGyB,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,UACjD,OACE,UAACtB,EAAD,YACI,gBACAuB,IAAmB,MAAdF,EAAqBjC,EAAAA,GAAaiC,EAAeG,EACtDC,IAAKL,EACLM,MAAM,MACNC,OAAO,SAGT,SAAC1B,EAAD,UAAWmB,KACX,UAACnB,EAAD,yBAAsBqB,OATN3B,EAYrB,KAAE,4EAIV,C","sources":["api/getApi.js","components/cast/Cast.styled.js","components/cast/Cast.jsx"],"sourcesContent":[" import axios from \"axios\";\n const BASE_URL=\"https://api.themoviedb.org/3/\";\n export const BASE_IMG_URL=\"https://image.tmdb.org/t/p/w500\";\n const API_KEY=\"?api_key=68bc8f2587d307cdd95fbf9f8320ddc0\";\n\n export const fetchTrending = () =>{\n    return axios.get(`${BASE_URL}/trending/movie/week${API_KEY}`)\n };\n export const fetchMovieByName = (query) =>{\n    return axios.get(`${BASE_URL}search/movie${API_KEY}&query=${query}`)\n }\n export const fetchDetailedById = (id) =>{\n    return axios.get(`${BASE_URL}movie/${id}${API_KEY}`)\n }\n export const fetchReviewsById = (id) =>{\n    return axios.get(`${BASE_URL}movie/${id}/reviews${API_KEY}`)\n }\n export const fetchCastById = (id) =>{\n    return axios.get(`${BASE_URL}movie/${id}/credits${API_KEY}`)\n }","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid black;\n  border-radius: 4px;\n\n  > a {\n    text-decoration: none;\n  }\n`;\n\nexport const ItemName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: black;\n`;\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container,CardWrapper,ItemName } from './Cast.styled';\nimport { fetchCastById,BASE_IMG_URL } from 'api/getApi';\nimport noImage from '../../images/noImage.jpg';\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [status, setStatus] = useState('idle');\n  useEffect(() => {\n    fetchCastById(id)\n      .then(({ data }) => {\n        setCast(data.cast);\n        setStatus('fulfilled');\n      })\n      .catch(error => {\n        setStatus('error');\n        console.log(error);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [id]);\n  if (status === 'idle' || isLoading) {\n    return <>Loading...</>;\n  }\n  if (status === 'error') {\n    return <>Occured an error</>;\n  }\n\n  return (\n    <section>\n      <h3>Cast</h3>\n\n      <Container>\n        {cast.length>0? cast.map(({ id,name, profile_path, character }) => {\n          return (\n            <CardWrapper key={id}>\n                <img\n                src={profile_path!=null ? BASE_IMG_URL+profile_path : noImage }\n                alt={name}\n                width='198'\n                height='297'\n              />\n              \n              <ItemName>{name}</ItemName>\n              <ItemName>Character: {character}</ItemName>\n            </CardWrapper>\n          );\n        }):<div>We don't have any casts for this movie yet</div>}\n      </Container>\n    </section>\n  );\n};\nexport default Cast;\n"],"names":["BASE_URL","BASE_IMG_URL","API_KEY","fetchTrending","axios","fetchMovieByName","query","fetchDetailedById","id","fetchReviewsById","fetchCastById","Container","styled","CardWrapper","ItemName","useParams","useState","cast","setCast","isLoading","setIsLoading","status","setStatus","useEffect","then","data","catch","error","console","log","finally","length","map","name","profile_path","character","src","noImage","alt","width","height"],"sourceRoot":""}